<% extend 'layout' %>

<h1><%= @title %></h1>

<div class="panel panel-default">
  <div class="panel-heading">Login</div>
  <div class="panel-body">
<form class="form-inline">
  <div class="form-group">
    <label class="sr-only" for="ecdsaName_in">Name</label>
    <input type="text" class="form-control" id="ecdsaName_in" placeholder="Name">
  </div>
  <div class="form-group">
    <label class="sr-only" for="ecdsaPass_in">Pass</label>
    <input type="password" class="form-control" id="ecdsaPass_in" placeholder="Password">
  </div>
  <input type="hidden" id="ecdsaAlg" value="SHA256withECDSA">
  <button type="button" class="btn btn-default" id="ecdsaSignin">Login</button>
</form>
  </div>
</div>

<p><a href="/">Return</a></p>

<p id="res"></p>

<script type="text/javascript">
$(function(){
$('#ecdsaSignin').click(function(){
	var name = $('#ecdsaName_in').val();
	var pass = $('#ecdsaPass_in').val();
	var alg = $('#ecdsaAlg').val();

	signin(name,pass,alg);
});

function signin(name,pass,alg){
	var _prvKey = localStorage.getItem(name);
	if(_prvKey == null ){
		$('#res').append('prvkey is invalid');
	}else{
		var startTime = new Date();
		var _pass = pass_hash(name,pass);
		var prvKey = Base64.decode(_prvKey);

		var token = get_token();
		var msg = token + _pass;

		var sig = new KJUR.crypto.Signature({"alg": alg});
		var prvKeyObj = KEYUTIL.getKey(prvKey, pass);
		sig.init(prvKeyObj);
		sig.updateString(msg);
		var sigHex = sig.sign();
		var endTime = new Date();

		$('#res').append($('#ecdsaName_in').val() + " sign: " + (endTime - startTime) + "ms&nbsp;");

		$.post('/signin', {
			name: name,
			sighex: sigHex,
			token: token,
			alg: alg
		}, function(json){
			if(json.result){
				// location.href = json.next;
				$('#res').append('<a href="' + json.next  + '">next</a>');
			} else {
				$('#res').append('login failed.');
			}
			$('#res').append('<br />');
		});
	}
}

function pass_hash(name,pass){
	var fixsalt = '5415231cd6ab37041ab9faacf828ee6ce31c9dcf981556687978496a753c6a57';
	var salt = name + fixsalt;
	var hash = '';
	for(i = 0;i < 10; i = i + 1){
		hash = CryptoJS.SHA256(hash + pass + salt).toString();
	}
	return hash;
}

function get_token(){
	var randam = Math.floor(Math.random()*1000);
	var date = new Date();
	var value = randam + date.getTime();
	var token = CryptoJS.SHA256(value).toString();
	return token;
}

});
</script>
